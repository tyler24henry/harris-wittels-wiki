{"version":3,"sources":["webpack:///./src/components/Search.js","webpack:///./src/pages/search.js"],"names":["PodcastAppearancesStyles","styled","div","Search","selectedImage","siteImages","appearances","tweets","harrisImages","bits","allFoam","tributes","searchTerm","useState","selected","setSelected","searchAvatar","filter","image","name","harrisAvatar","instagramAvatar","selectedVideoIndex","setSelectedVideoIndex","selectedVideo","selectedImageIndex","setSelectedImageIndex","isPrevIndex","isNextIndex","length","appearancesSorted","sortByDate","tweetsByDate","className","id","src","alt","fluid","asset","type","onClick","e","map","appearance","dateStr","month","day","year","key","href","link","target","podcastTitle","episodeTitle","host","tweet","index","date","isRetweet","retweetName","handle","retweetHandle","retweetAvatar","content","youtubeUrl","style","maxWidth","maxHeight","url","controls","light","harrisImage","title","bit","thumbnail","foam","tribute","caption","disabled","SearchPage","data","images","nodes","location","search","charAt","slice","regex","RegExp","toLowerCase","test","SEO"],"mappings":"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","file":"component---src-pages-search-js-be2c1723e6a1e19383d8.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport { sortByDate } from '../utils/dateHelpers';\nimport { GoVerified } from 'react-icons/go';\nimport { FaRetweet } from 'react-icons/fa';\nimport ReactPlayer from 'react-player/lazy';\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\nimport { AiFillCaretRight } from 'react-icons/ai';\n\nconst PodcastAppearancesStyles = styled.div`\n    .podcast-appearances-wrapper {\n        margin: 2rem auto 4rem auto;\n        width: 600px;\n        border: 1px solid #c4cfd7;\n        .background-image {\n            width: 100%;\n            height: 200px;\n            img {\n                width: 100%;\n                height: 200px;\n                object-fit: cover;\n                object-position: 0 0;\n            }\n        }\n        .page-into-wrapper {\n            padding: 0 1.5rem;\n            .avatar-following-grid {\n                display: grid;\n                grid-template-columns: auto 1fr;\n                gap: 1rem;\n                .podcast-avatar {\n                    margin-top: -72px;\n                    height: 134px;\n                    width: 134px;\n                    border-radius: 50%;\n                    border: 5px solid var(--white);\n                }\n                #following-btn {\n                    margin-top: 1rem;\n                    justify-self: end;\n                    height: 39px;\n                    width: 102px;\n                    background-color:var(--black);;\n                    color: var(--white);\n                    border-radius: 9999px;\n                    font-size: 1.5rem;\n                    font-weight: 600;\n                    letter-spacing: 0.5px;\n                    pointer-events: none;\n                    cursor: default;\n                }\n            }\n            #name-wrapper {\n                width: auto;\n                margin-top: 0.5rem;\n                line-height: 1.3125;\n                h2 {\n                    font-size: 19px;\n                    font-weight: 700;\n                    letter-spacing: 0.5px;\n                }\n            }\n            #bio {\n                margin-top: 1rem;\n                font-size: 1.5rem;\n            }\n        }\n        .categories-nav {\n            margin-top: 2rem;\n            border-bottom: 1px solid #c4cfd7;\n            .categories {\n                display: grid;\n                grid-template-columns: auto auto auto auto auto auto;\n                .category {\n                    display: grid;\n                    grid-template-columns: 1fr;\n                    justify-items: center;\n                    align-items: center;\n                    height: 30px;\n                    &:hover {\n                        cursor: pointer;\n                        border-bottom: 2px solid var(--black);\n                    }\n                    p {\n                        color: var(--black);;\n                        font-size: 1.4rem;\n                        font-weight: 600;\n                        span {\n                            font-weight: 500;\n                        }\n                    }\n                }\n                #selected {\n                    border-bottom: 2px solid var(--black);\n                }\n            }\n        }\n        .results-wrapper {\n            .no-content-wrapper {\n                p {\n                    padding: 1.2rem 1.5rem;\n                    /* border: 1px solid #c4cfd7; */\n                    font-size: 1.5rem;\n                    color: var(--black);\n                    font-weight: 500;\n                }\n            }\n            .list-of-appearances-wrapper {\n                h2 {\n                    padding: 0 1rem;\n                    font-weight: 600;\n                    font-size: 1.6rem;\n                    letter-spacing: 0.5px;\n                }\n                .header, .podcast {\n                    display: grid;\n                    grid-template-columns: 2.5fr 5fr 2fr 1.6fr;\n                    gap: 0.5rem;\n                    align-items: center;\n                    padding: 0.5rem 1rem;\n                    background: #c4cfd7;\n                    p {\n                        font-size: 1.2rem;\n                    }\n                }\n                .header {\n                    padding: 0.6rem 1rem 0.4rem 1rem;\n                    p {\n                        text-transform: uppercase;\n                        font-weight: 600;\n                        font-size: 1.1rem;\n                        letter-spacing: 0.5px;\n                    }\n                }\n                .podcast {\n                    border-top: 1px solid #c4cfd7;\n                    background: none;\n                    color: var(--black);\n                    transition: all 0.5s;\n                    &:hover {\n                        background: #c4cfd7;\n                        text-decoration: none;\n                    }\n                    p {\n                        font-weight: 400;\n                    }\n                }\n            }\n            .tweet-wrapper {\n                padding: 1.2rem 1.5rem;\n                display: grid;\n                grid-template-columns: auto 1fr;\n                gap: 1.5rem;\n                border-top: 1px solid #c4cfd7;\n                .retweet {\n                    justify-self: end;\n                    margin-top: 0.2rem;\n                }\n                .retweet, #retweet-message {\n                    font-size: 1.4rem;\n                    color: #5b7082;\n                    font-weight: 500;\n                    margin-bottom: -0.9rem;\n                }\n                .avatar {\n                    width: 49px;\n                    height: 49px;\n                    border-radius: 50%;\n                    box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.09);\n                }\n                .tweet {\n                    .tweet-details {\n                        display: flex;\n                        font-size: 1.5rem;\n                        #handle {\n                            font-weight: 600;\n                            color: var(--black);\n                        }\n                        .verified {\n                            color: rgba(29,161,242,1.00);\n                            margin: 0 0.7rem 0 0.3rem;\n                        }\n                        #details {\n                            color: #5B7083;\n                            font-weight: 500;\n                        }\n                        #bullet {\n                            font-weight: 300;\n                            font-size: 1rem;\n                            opacity: 0.6;\n                        }\n                    }\n                    #content {\n                        margin-top: 0.5rem;\n                        color: var(--black);\n                    }\n                    .media-wrapper {\n                        margin-top: 1rem;\n                        max-width: 506px;\n                        max-height: 285px;\n                        border-radius: 10px;\n                        overflow: hidden;\n                        .image, .video-player {\n                            max-width: 506px;\n                            max-height: 285px;\n                            object-fit: cover;\n                        }\n                    }\n                }\n            }\n            #first-tweet {\n                border-top: none;\n            }\n            .images-wrapper {\n                padding: 2rem;\n                display: grid;\n                grid-template-columns: 1fr 1fr;\n                gap: 2rem;\n                align-items: center;\n                justify-items: center;\n                .image-wrapper {\n                    width: 270px;\n                    height: 270px;\n                    &:hover {\n                        cursor: pointer;\n                    }\n                    .image {\n                        width: 100%;\n                        height: 100%;\n                        object-fit: cover;\n                    }\n                }\n            }\n            .bits-wrapper {\n                .now-playing-wrapper {\n                    margin-top: 2rem;\n                    p {\n                        padding: 1rem 3rem 1rem 3rem;\n                        color: var(--black);\n                        font-size: 1.6rem;\n                    }\n                    #now-playing {\n                        font-weight: 600;\n                    }\n                    .video-player-wrapper {\n                        margin: 0 2rem;\n                        border: 1px solid #8c8c8c;\n                        display: grid;\n                        grid-template-columns: 1fr;\n                        align-items: center;\n                        justify-items: center;\n                        width: 560px;\n                        border-radius: 10px;\n                        overflow: hidden;\n                    }\n                }\n                .thumbnails-wrapper {\n                    margin-top: 2.5rem;\n                    padding: 1.5rem;\n                    display: grid;\n                    grid-template-columns: 1fr 1fr 1fr;\n                    gap: 1.5rem;\n                    .thumbnail-wrapper {\n                        width: 180px;\n                        &:hover {\n                            cursor: pointer;\n                        }\n                        .image-wrapper {\n                            background:  var(--black);\n                            display: grid;\n                            grid-template-columns: 1fr;\n                            justify-items: center;\n                            align-items: center;\n                            .thumbnail {\n                                width: 100%;\n                                height: 110px;\n                                object-fit: contain;\n                            }\n                        }\n                        .title {\n                            margin-top: 0.5rem;\n                            padding-left: 0.2rem;\n                            font-size: 1.4rem;\n                            font-weight: 600;\n                            letter-spacing: 0;\n                        }\n                    }\n                }\n            }\n            .foam-jokes {\n                .foam-joke {\n                    padding: 1.2rem 1.5rem;\n                    border-top: 1px solid #c4cfd7;\n                    font-size: 1.5rem;\n                    color: var(--black);\n                    font-weight: 500;\n                }\n            }\n            #first-foam {\n                border-top: none;\n            }\n            .tributes {\n                .tribute {\n                    padding: 1.2rem 1.5rem;\n                    border-top: 1px solid #c4cfd7;\n                    font-size: 1.5rem;\n                    color: var(--black);\n                    font-weight: 500;\n                    display: grid;\n                    grid-template-columns: auto 1fr;\n                    gap: 0.8rem;\n                    align-items: center;\n                    .caret {\n                        font-size: 1.2rem;\n                    }\n                    a {\n                        color: var(--black); \n                    }\n                }\n                #first-tribute {\n                    border-top: none;\n                }\n            }\n        }\n    }\n    #background {\n        pointer-events: none;\n        filter: blur(2px);\n    }\n    .image-modal-wrapper {\n        z-index: 2;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        overflow-y: scroll;\n        display: grid;\n        grid-template-columns: 1fr;\n        justify-items: center;\n        align-items: center;\n        .modal {\n            position: relative;\n            width: 600px;\n            height: 100vh;\n            background: #f8f7f8;\n            padding: 2rem 2rem 6rem 2rem;\n            display: grid;\n            grid-template-columns: 1fr;\n            justify-items: center;\n            .modal-header {\n                display: grid;\n                grid-template-columns: auto 1fr auto;\n                gap: 1rem;\n                align-items: center;\n                width: calc(500px - 2rem);\n                padding: 1rem;\n                margin: 0 auto;\n                #exit-btn {\n                    justify-self: end;\n                    width: 20px;\n                    background: none;\n                    border: none;\n                    color: #919191;\n                    font-size: 2.5rem;\n                }\n                .instagram-avatar {\n                    height: 35px;\n                    width: 35px;\n                    border-radius: 50%;\n                }\n                p {\n                    font-size: 1.4rem;\n                    font-weight: 600;\n                    color: var(--black);\n                }\n            }\n            .modal-image {\n                width: 500px;\n                height: 500px;\n                object-fit: cover;\n            }\n            #caption {\n                font-size: 1.4rem;\n                color: var(--black);\n                width: calc(500px - 1rem);\n                margin: 0 auto;\n                margin-top: 1rem;\n                span {\n                    padding-right: 0.3rem;\n                    font-weight: 600;\n                }\n            }\n            #date {\n                font-size: 1.2rem;\n                font-weight: 500;\n                color: #919191;\n                width: calc(500px - 1rem);\n                margin: 0 auto;\n                margin-top: 1rem;\n            }\n            button {\n                background: none;\n                border: none;\n                &[disabled]{\n                    pointer-events: none;\n                    opacity: 0;\n                }\n            }\n            .chevron-left, .chevron-right {\n                position: absolute;\n                top: 340px;\n                color: #919191;\n                font-size: 4rem;\n            }\n            .chevron-left {\n                left: 15px;\n            }\n            .chevron-right {\n                right: 15px;\n            }\n        }\n        #background-tint {\n            position: fixed;\n            left: 0;\n            top: 0;\n            width: 100vw;\n            height: 100vh;\n            background: black;\n            z-index: -1;\n            opacity: 0.5;\n        }\n    }\n`;\n\nexport const Search = ({ siteImages, appearances, tweets, harrisImages, bits, allFoam, tributes, searchTerm }) => {\n    const [selected, setSelected] = useState('Podcast Appearances');\n    const [searchAvatar] = siteImages.filter(image => image.name === 'Search Avatar');\n    const [harrisAvatar] = siteImages.filter(image => image.name === 'Harris Twitter Avatar');\n    const [instagramAvatar] = siteImages.filter(image => image.name === 'Instagram Avatar');\n    const [selectedVideoIndex, setSelectedVideoIndex] = useState(0);\n\n    const selectedVideo = bits[selectedVideoIndex];\n\n    const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n    let selectedImage;\n    if(harrisImages && selectedImageIndex !== null){\n        selectedImage = [...harrisImages][selectedImageIndex];\n    }\n    const isPrevIndex = selectedImageIndex > 0;\n    const isNextIndex = selectedImageIndex + 1 < harrisImages.length;\n\n    const appearancesSorted = sortByDate([...appearances]);\n    const tweetsByDate = sortByDate([...tweets]);\n    return (\n        <PodcastAppearancesStyles>\n            <div className=\"podcast-appearances-wrapper\" id={selectedImageIndex !== null ? 'background' : ''}>\n                <div className=\"background-image\"><img src=\"https://res.cloudinary.com/tyler24henry/image/upload/v1608335940/harrisvice_dymdej.jpg\" alt=\"Podcast art\" /></div>\n                <div className=\"page-into-wrapper\">\n                    <div className=\"avatar-following-grid\">\n                        <Img className=\"podcast-avatar\" fluid={searchAvatar.image.asset.fluid} alt=\"Avatar\" />\n                        <button id=\"following-btn\" type=\"button\">Searchin'</button>\n                    </div>\n                    <div id=\"name-wrapper\">\n                        <h2>Search this site</h2>\n                    </div>\n                    <p id=\"bio\">\"Waldo asked me to spot him at the gym. Couldn't do it.\" - Harris tweet on March 3, 2013 (this is the search page, had to include it... because searching for Waldo)</p>\n                </div>\n                <div className=\"categories-nav\">\n                    <div className=\"categories\">\n                        <div className=\"category\" id={selected === 'Podcast Appearances' ? 'selected' : ''} onClick={e => setSelected('Podcast Appearances')}>\n                            <p>Podcast apps <span>({appearances.length})</span></p>\n                        </div>\n                        <div className=\"category\" id={selected === 'Tweets' ? 'selected' : ''} onClick={e => setSelected('Tweets')}>\n                            <p>Tweets <span>({tweets.length})</span></p>\n                        </div>\n                        <div className=\"category\" id={selected === 'Instagram' ? 'selected' : ''} onClick={e => setSelected('Instagram')}>\n                            <p>Grams <span>({harrisImages.length})</span></p>\n                        </div>\n                        <div className=\"category\" id={selected === 'Youtube' ? 'selected' : ''} onClick={e => setSelected('Youtube')}>\n                            <p>Youtube vids <span>({bits.length})</span></p>\n                        </div>\n                        <div className=\"category\" id={selected === 'Foam Corner' ? 'selected' : ''} onClick={e => setSelected('Foam Corner')}>\n                            <p>Foams <span>({allFoam.length})</span></p>\n                        </div>\n                        <div className=\"category\" id={selected === 'Tributes' ? 'selected' : ''} onClick={e => setSelected('Tributes')}>\n                            <p>Tributes <span>({tributes.length})</span></p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"results-wrapper\">\n                    {selected === 'Podcast Appearances' && appearances.length > 0 && (\n                        <div className=\"list-of-appearances-wrapper\">\n                            <div className=\"header\">\n                                <p>Podcast</p>\n                                <p>Episode title</p>\n                                <p>Host</p>\n                                <p>Date</p>\n                            </div>\n                            {appearancesSorted.map(appearance => {\n                                const dateStr = `${appearance.month} ${appearance.day}, ${appearance.year}`;\n                                return (\n                                    <a className=\"podcast\" key={appearances.id} href={appearance.link} target=\"_blank\" key={appearance.id}>\n                                        <p>{appearance.podcastTitle}</p>\n                                        <p>{appearance.episodeTitle}</p>\n                                        <p>{appearance.host}</p>\n                                        <p>{dateStr}</p>\n                                    </a>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {selected === 'Podcast Appearances' && appearances.length === 0 && (\n                        <div className=\"no-content-wrapper\">\n                            <p>No podcast appearances found{searchTerm ? ` for search term \"${searchTerm}\"` : ''}</p>\n                        </div>\n                    )}\n                    {selected === 'Tweets' && tweets.length > 0 && (\n                        <>\n                            {tweetsByDate.map((tweet, index) => {\n                                const date = `${tweet.month} ${tweet.day}, ${tweet.year}`;\n                                const name = tweet.isRetweet ? tweet.retweetName : 'Harris Wittels';\n                                const handle = tweet.isRetweet ? tweet.retweetHandle : 'twittels';\n                                return (\n                                    <div className=\"tweet-wrapper\" key={tweet.id} id={index === 0 ? 'first-tweet' : ''}>\n                                        {tweet.isRetweet && (\n                                            <>\n                                                <FaRetweet className=\"retweet\" />\n                                                <p id=\"retweet-message\">Harris Wittels Retweeted</p>\n                                            </>\n                                        )}\n                                        <Img className=\"avatar\" fluid={tweet.isRetweet ? tweet.retweetAvatar.asset.fluid : harrisAvatar.image.asset.fluid} alt=\"Avatar\" />\n                                        <div className=\"tweet\">\n                                            <div className=\"tweet-details\">\n                                                <p id=\"handle\">{name}</p>\n                                                {!tweet.isRetweet && (\n                                                    <GoVerified className=\"verified\" />\n                                                )}\n                                                <p id=\"details\">@{handle} <span id=\"bullet\">&bull;</span> {date}</p>\n                                            </div>\n                                            <p id=\"content\">{tweet.content}</p>\n                                            <div className=\"media-wrapper\">\n                                                {tweet.image && (\n                                                    <Img className=\"image\" fluid={tweet.image.asset.fluid} alt=\"Image\" />\n                                                )}\n                                                {tweet.youtubeUrl && (\n                                                    <ReactPlayer style={{ maxWidth: '506px', maxHeight: '285px'}} url={tweet.youtubeUrl} controls light />\n                                                )}\n                                            </div>\n                                        </div>  \n                                    </div>\n                                )\n                            })}\n                        </>\n                    )}\n                    {selected === 'Tweets' && tweets.length === 0 && (\n                        <div className=\"no-content-wrapper\">\n                            <p>No tweets found{searchTerm ? ` for search term \"${searchTerm}\"` : ''}</p>\n                        </div>\n                    )}\n                    {selected === 'Instagram' && harrisImages.length > 0 && (\n                        <div className=\"images-wrapper\">\n                            {harrisImages.map((harrisImage, index) => {\n                                return (\n                                    <div className=\"image-wrapper\" key={harrisImage.id} onClick={e => setSelectedImageIndex(index)}>\n                                        <Img className=\"image\" fluid={harrisImage.image.asset.fluid} alt=\"From Instagram\" />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {selected === 'Instagram' && harrisImages.length === 0 && (\n                        <div className=\"no-content-wrapper\">\n                            <p>No instagrams found{searchTerm ? ` for search term \"${searchTerm}\"` : ''}</p>\n                        </div>\n                    )}\n                    {selected === 'Youtube' && bits.length > 0 && (\n                        <div className=\"bits-wrapper\">\n                            {selectedVideo && (\n                                <div className=\"now-playing-wrapper\">\n                                    <div className=\"video-player-wrapper\">\n                                        <ReactPlayer style={{ maxWidth: '560px'}} url={selectedVideo.youtubeUrl} controls light />\n                                    </div>\n                                    <p><span id=\"now-playing\">Now playing:</span> {selectedVideo.title}</p>\n                                </div>\n                            )}\n                            <div className=\"thumbnails-wrapper\">\n                                {bits.map((bit, index) => {\n                                    return (\n                                        <div className=\"thumbnail-wrapper\" key={bit.id} onClick={e => setSelectedVideoIndex(index)}>\n                                            <div className=\"image-wrapper\">\n                                                <Img className=\"thumbnail\" fluid={bit.thumbnail.asset.fluid} alt=\"Thumbnail\" />\n                                            </div>\n                                            <p className=\"title\">{bit.title}</p>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    )}\n                    {selected === 'Youtube' && bits.length === 0 && (\n                        <div className=\"no-content-wrapper\">\n                            <p>No youtube videos found{searchTerm ? ` for search term \"${searchTerm}\"` : ''}</p>\n                        </div>\n                    )}\n                    {selected === 'Foam Corner' && allFoam.length > 0 && (\n                        <div className=\"foam-jokes\">\n                            {allFoam.map((foam, index) => (\n                                <p className=\"foam-joke\" id={index === 0 ? 'first-foam' : ''}>{foam.content}</p>\n                            ))}\n                        </div>\n                    )}\n                    {selected === 'Foam Corner' && allFoam.length === 0 && (\n                        <div className=\"no-content-wrapper\">\n                            <p>No foam corner jokes found{searchTerm ? ` for search term \"${searchTerm}\"` : ''}</p>\n                        </div>\n                    )}\n                    {selected === 'Tributes' && tributes.length > 0 && (\n                        <div className=\"tributes\">\n                            {tributes.map((tribute, index) => (\n                                <div className=\"tribute\" id={index === 0 ? 'first-tribute' : ''}>\n                                    <AiFillCaretRight className=\"caret\" />\n                                    <a href={tribute.link} target=\"_blank\">{tribute.title}</a>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {selected === 'Tributes' && tributes.length === 0 && (\n                        <div className=\"no-content-wrapper\">\n                            <p>No tributes found{searchTerm ? ` for search term \"${searchTerm}\"` : ''}</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            {selectedImageIndex !== null && (\n                <div className=\"image-modal-wrapper\">\n                    <div className=\"modal\">\n                        <div className=\"modal-header\">\n                            <Img className=\"instagram-avatar\" fluid={instagramAvatar.image.asset.fluid} alt=\"Avatar\" />\n                            <p>twittels</p>\n                            <button id=\"exit-btn\" type=\"button\" onClick={e => setSelectedImageIndex(null)}>&times;</button>\n                        </div>\n                        <Img className=\"modal-image\" fluid={selectedImage.image.asset.fluid} alt=\"From Instagram\" />\n                        <p id=\"caption\"><span>twittels</span> {selectedImage.caption}</p>\n                        <p id=\"date\">{selectedImage.month} {selectedImage.day}, {selectedImage.year}</p>\n                        <button type=\"button\" disabled={!isPrevIndex} onClick={e => setSelectedImageIndex(selectedImageIndex - 1)}><FiChevronLeft className=\"chevron-left\" /></button>\n                        <button type=\"button\" disabled={!isNextIndex} onClick={e => setSelectedImageIndex(selectedImageIndex + 1)}><FiChevronRight className=\"chevron-right\" /></button>\n                    </div>\n                    <div id=\"background-tint\"></div>\n                </div>\n            )}\n        </PodcastAppearancesStyles>\n    )\n}\n","import React from 'react';\nimport { Search } from '../components/Search';\nimport SEO from '../components/SEO';\nimport { graphql } from 'gatsby';\n\nexport default function SearchPage({ data }) {\n    const siteImages = data.images.nodes;\n    let appearances = data.appearances.nodes;\n    let tweets = data.tweets.nodes;\n    let harrisImages = data.harrisImages.nodes;\n    let bits = data.bits.nodes;\n    let allFoam = data.allFoam.nodes;\n    let tributes = data.tributes.nodes;\n\n    let searchTerm = location ? location.search : null;\n    if(searchTerm.length > 3 && searchTerm.charAt(2) === '='){\n        searchTerm = searchTerm.slice(3);\n    } else {\n        searchTerm = null;\n    }\n\n    if(searchTerm){\n        const regex = new RegExp(searchTerm.toLowerCase());\n        appearances = appearances.filter(appearance => {\n            const match = regex.test(appearance.podcastTitle.toLowerCase()) || regex.test(appearance.episodeTitle.toLowerCase());\n            return match;\n        });\n        tweets = tweets.filter(tweet => {\n            const match = regex.test(tweet.content.toLowerCase());\n            return match;\n        });\n        harrisImages = harrisImages.filter(harrisImage => {\n            const match = regex.test(harrisImage.caption.toLowerCase());\n            return match;\n        });\n        bits = bits.filter(bit => {\n            const match = regex.test(bit.title.toLowerCase());\n            return match;\n        });\n        allFoam = allFoam.filter(foam => {\n            const match = regex.test(foam.content.toLowerCase());\n            return match;\n        });\n        tributes = tributes.filter(tribute => {\n            const match = regex.test(tribute.title.toLowerCase());\n            return match;\n        });\n    }\n\n    return (\n        <>\n            <SEO />\n            <Search siteImages={siteImages} appearances={appearances} tweets={tweets} harrisImages={harrisImages} bits={bits} allFoam={allFoam} tributes={tributes} searchTerm={searchTerm} />\n        </>\n    )\n}\n\nexport const query = graphql`\n    query {\n        images: allSanitySiteImage {\n            nodes {\n                id\n                name\n                image {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n            }\n        }\n        appearances: allSanityPodcastAppearance(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                month\n                day\n                year\n                podcastTitle\n                episodeTitle\n                host\n                link\n                _createdAt\n            }\n        }\n        tweets: allSanityTweet(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                month\n                day\n                year\n                content\n                image {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n                youtubeUrl\n                replyingTo\n                isRetweet\n                retweetAvatar {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n                retweetName\n                retweetHandle\n                _createdAt\n            }\n        }\n        harrisImages: allSanityHarrisImage(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                month\n                day\n                year\n                image {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n                caption\n                link\n                _createdAt\n            }\n        }\n        bits: allSanityBit(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                title\n                thumbnail {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n                youtubeUrl\n                _createdAt\n            }\n        }\n        allFoam: allSanityFoam(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                content\n                _createdAt\n            }\n        }\n        tributes: allSanityTribute(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                title\n                link\n                _createdAt\n            }\n        }\n    }\n`;"],"sourceRoot":""}