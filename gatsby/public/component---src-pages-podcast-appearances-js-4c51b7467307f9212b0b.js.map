{"version":3,"sources":["webpack:///./src/utils/dateHelpers.js","webpack:///./src/components/PodcastAppearances.js","webpack:///./src/pages/podcast-appearances.js"],"names":["convertMonthToInt","str","sortByDate","arr","sort","a","b","aDate","Date","year","month","day","bDate","aMs","getTime","bMs","PodcastAppearancesStyles","styled","div","PodcastAppearances","siteImages","appearances","podcastAvatar","filter","image","name","appearancesSorted","className","src","alt","fluid","asset","id","type","map","appearance","dateStr","key","href","link","target","podcastTitle","episodeTitle","host","PodcastAppearancesPage","data","images","nodes","SEO"],"mappings":"gJAAaA,EAAoB,SAAAC,GA2B7B,MAzBW,QAARA,EACS,EACM,QAARA,EACE,EACM,QAARA,EACE,EACM,QAARA,EACE,EACM,QAARA,EACE,EACM,QAARA,EACE,EACM,QAARA,EACE,EACM,QAARA,EACE,EACM,SAARA,EACE,EACM,QAARA,EACE,EACM,QAARA,EACE,GAEA,IAKHC,EAAa,SAAAC,GActB,OAbc,YAAIA,GAAKC,MAAK,SAACC,EAAGC,GAC5B,IAAMC,EAAQ,IAAIC,KAAKH,EAAEI,KAAMT,EAAkBK,EAAEK,OAAQL,EAAEM,KACvDC,EAAQ,IAAIJ,KAAKF,EAAEG,KAAMT,EAAkBM,EAAEI,OAAQJ,EAAEK,KACvDE,EAAMN,EAAMO,UACZC,EAAMH,EAAME,UAClB,OAAGD,EAAME,GACG,EACFF,EAAME,EACL,EAEA,O,mKCpCbC,EAA2BC,IAAOC,IAAV,mGAAGD,CAAH,y8CA4GjBE,EAAqB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACtCC,EAAiBF,EAAWG,QAAO,SAAAC,GAAK,MAAmB,yBAAfA,EAAMC,QADM,GAGzDC,EAAoBxB,YAAW,YAAImB,IAEzC,OACI,kBAACL,EAAD,KACI,yBAAKW,UAAU,+BACX,yBAAKA,UAAU,oBAAmB,yBAAKC,IAAI,8FAA8FC,IAAI,iBAC7I,yBAAKF,UAAU,qBACX,yBAAKA,UAAU,yBACX,kBAAC,IAAD,CAAKA,UAAU,iBAAiBG,MAAOR,EAAcE,MAAMO,MAAMD,MAAOD,IAAI,WAC5E,4BAAQG,GAAG,gBAAgBC,KAAK,UAAhC,eAEJ,yBAAKD,GAAG,gBACJ,oDAEJ,uBAAGA,GAAG,OAAN,8JAEJ,yBAAKL,UAAU,+BACX,yBAAKA,UAAU,UACX,sCACA,4CACA,mCACA,oCAEHD,EAAkBQ,KAAI,SAAAC,GAAe,IAAD,EAC3BC,EAAaD,EAAWzB,MAAjB,IAA0ByB,EAAWxB,IAArC,KAA6CwB,EAAW1B,KACrE,OACI,2BAAGkB,UAAU,UAAUU,IAAKhB,EAAYW,GAAIM,KAAMH,EAAWI,KAAMC,OAAO,WAA1E,IAAwFL,EAAWH,GAAnG,GACI,2BAAIG,EAAWM,cACf,2BAAIN,EAAWO,cACf,2BAAIP,EAAWQ,MACf,2BAAIP,W,YC7IrB,SAASQ,EAAT,GAA2C,IAATC,EAAQ,EAARA,KACvCzB,EAAayB,EAAKC,OAAOC,MACzB1B,EAAcwB,EAAKxB,YAAY0B,MACrC,OACI,oCACI,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,CAAoB5B,WAAYA,EAAYC,YAAaA","file":"component---src-pages-podcast-appearances-js-4c51b7467307f9212b0b.js","sourcesContent":["export const convertMonthToInt = str => {\n    let month;\n    if(str === 'Jan'){\n        month = 0;\n    } else if(str === 'Feb'){\n        month = 1;\n    } else if(str === 'Mar'){\n        month = 2;\n    } else if(str === 'Apr'){\n        month = 3;\n    } else if(str === 'May'){\n        month = 4;\n    } else if(str === 'Jun'){\n        month = 5;\n    } else if(str === 'Jul'){\n        month = 6;\n    } else if(str === 'Aug'){\n        month = 7;\n    } else if(str === 'Sept'){\n        month = 8;\n    } else if(str === 'Oct'){\n        month = 9;\n    } else if(str === 'Nov'){\n        month = 10;\n    } else {\n        month = 11;\n    }\n    return month;\n}\n\nexport const sortByDate = arr => {\n    const array = [...arr].sort((a, b) => {\n        const aDate = new Date(a.year, convertMonthToInt(a.month), a.day);\n        const bDate = new Date(b.year, convertMonthToInt(b.month), b.day);\n        const aMs = aDate.getTime();\n        const bMs = bDate.getTime();\n        if(aMs > bMs){\n            return -1;\n        } else if(aMs < bMs){\n            return 1;\n        } else {\n            return 0;\n        }\n    });\n    return array;\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport { sortByDate } from '../utils/dateHelpers';\n\nconst PodcastAppearancesStyles = styled.div`\n    .podcast-appearances-wrapper {\n        margin: 0 auto 2rem auto;\n        width: 600px;\n        border: 1px solid #c4cfd7;\n        .background-image {\n            width: 100%;\n            height: 200px;\n            img {\n                width: 100%;\n                height: 200px;\n                object-fit: cover;\n                object-position: 0 100%;\n            }\n        }\n        .page-into-wrapper {\n            padding: 0 1.5rem;\n            .avatar-following-grid {\n                display: grid;\n                grid-template-columns: auto 1fr;\n                gap: 1rem;\n                .podcast-avatar {\n                    margin-top: -72px;\n                    height: 134px;\n                    width: 134px;\n                    border-radius: 50%;\n                    border: 5px solid var(--white);\n                }\n                #following-btn {\n                    margin-top: 1rem;\n                    justify-self: end;\n                    height: 39px;\n                    width: 102px;\n                    background-color: var(--black);\n                    color: var(--white);\n                    border-radius: 9999px;\n                    font-size: 1.5rem;\n                    font-weight: 600;\n                    letter-spacing: 0.5px;\n                    pointer-events: none;\n                    cursor: default;\n                }\n            }\n            #name-wrapper {\n                width: auto;\n                margin-top: 0.5rem;\n                line-height: 1.3125;\n                display: grid;\n                grid-template-columns: auto 1fr;\n                justify-items: center;\n                align-items: center;\n                gap: 0.2rem;\n                h2 {\n                    font-size: 19px;\n                    font-weight: 700;\n                    letter-spacing: 0.5px;\n                }\n            }\n            #bio {\n                margin-top: 1rem;\n                font-size: 1.5rem;\n            }\n        }\n        .list-of-appearances-wrapper {\n            margin-top: 4rem;\n            h2 {\n                padding: 0 1rem;\n                font-weight: 600;\n                font-size: 1.6rem;\n                letter-spacing: 0.5px;\n            }\n            .header, .podcast {\n                display: grid;\n                grid-template-columns: 2.5fr 5fr 2fr 1.6fr;\n                gap: 0.5rem;\n                align-items: center;\n                padding: 0.5rem 1rem;\n                background: #c4cfd7;\n                p {\n                    font-size: 1.2rem;\n                }\n            }\n            .header {\n                padding: 0.6rem 1rem 0.4rem 1rem;\n                p {\n                    text-transform: uppercase;\n                    font-weight: 600;\n                    font-size: 1.1rem;\n                    letter-spacing: 0.5px;\n                }\n            }\n            .podcast {\n                border-top: 1px solid #c4cfd7;\n                background: none;\n                color: var(--black);\n                transition: all 0.5s;\n                &:hover {\n                    background: #c4cfd7;\n                    text-decoration: none;\n                }\n                p {\n                    font-weight: 400;\n                }\n            }\n        }\n    }\n`;\n\nexport const PodcastAppearances = ({ siteImages, appearances }) => {\n    const [podcastAvatar] = siteImages.filter(image => image.name === 'Harris Last Farts Ep');\n\n    const appearancesSorted = sortByDate([...appearances]);\n\n    return (\n        <PodcastAppearancesStyles>\n            <div className=\"podcast-appearances-wrapper\">\n                <div className=\"background-image\"><img src=\"https://res.cloudinary.com/tyler24henry/image/upload/v1608143465/itsgooditsfunky_jofv73.jpg\" alt=\"Podcast art\" /></div>\n                <div className=\"page-into-wrapper\">\n                    <div className=\"avatar-following-grid\">\n                        <Img className=\"podcast-avatar\" fluid={podcastAvatar.image.asset.fluid} alt=\"Avatar\" />\n                        <button id=\"following-btn\" type=\"button\">Podcastin'</button>\n                    </div>\n                    <div id=\"name-wrapper\">\n                        <h2>Podcast Appearances</h2>\n                    </div>\n                    <p id=\"bio\">\"How’s it going everybody? This is Harris Wittels. I’ll be your tour guide through the cosmos today, sorry.\" - Harris Wittels, episode 1 of Analyze Phish</p>\n                </div>\n                <div className=\"list-of-appearances-wrapper\">\n                    <div className=\"header\">\n                        <p>Podcast</p>\n                        <p>Episode title</p>\n                        <p>Host</p>\n                        <p>Date</p>\n                    </div>\n                    {appearancesSorted.map(appearance => {\n                        const dateStr = `${appearance.month} ${appearance.day}, ${appearance.year}`;\n                        return (\n                            <a className=\"podcast\" key={appearances.id} href={appearance.link} target=\"_blank\" key={appearance.id}>\n                                <p>{appearance.podcastTitle}</p>\n                                <p>{appearance.episodeTitle}</p>\n                                <p>{appearance.host}</p>\n                                <p>{dateStr}</p>\n                            </a>\n                        )\n                    })}\n                </div>\n            </div>\n        </PodcastAppearancesStyles>\n    )\n}\n","import React from 'react';\nimport { PodcastAppearances } from '../components/PodcastAppearances';\nimport SEO from '../components/SEO';\nimport { graphql } from 'gatsby';\n\nexport default function PodcastAppearancesPage({ data }) {\n    const siteImages = data.images.nodes;\n    const appearances = data.appearances.nodes;\n    return (\n        <>\n            <SEO />\n            <PodcastAppearances siteImages={siteImages} appearances={appearances} />\n        </>\n    )\n}\n\nexport const query = graphql`\n    query {\n        appearances: allSanityPodcastAppearance(sort: {fields: _createdAt, order: ASC}) {\n            nodes {\n                id\n                month\n                day\n                year\n                podcastTitle\n                episodeTitle\n                host\n                link\n                _createdAt\n            }\n        }\n        images: allSanitySiteImage {\n            nodes {\n                id\n                name\n                image {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;"],"sourceRoot":""}